digraph AST {
5 [shape=box, label="Literal value=2\nreg: r0\ncode: \nloadI 2 => r0\ntype: int"];
6 [shape=box, label="Literal value=3\nreg: r1\ncode: \nloadI 3 => r1\ntype: int"];
4 [shape=box, label="BinaryOp op='+'\nreg: r2\ncode: \nloadI 2 => r0\nloadI 3 => r1\nadd r0, r1 => r2\ntype: int"];
4 -> 5;
4 -> 6;
3 [shape=box, label="Return\ncode: \nloadI 2 => r0\nloadI 3 => r1\nadd r0, r1 => r2\ni2i r2 => RET\njump l0"];
3 -> 4;
2 [shape=box, label="Block\ncode: \nloadI 2 => r0\nloadI 3 => r1\nadd r0, r1 => r2\ni2i r2 => RET\njump l0\nsymbolTable: (empty)"];
2 -> 3;
1 [shape=box, label="FuncDecl name='main'\ncode: \nmain:\npush BP\ni2i SP => BP\naddI SP, 0 => BP\nloadI 2 => r0\nloadI 3 => r1\nadd r0, r1 => r2\ni2i r2 => RET\njump l0\nl0:\ni2i BP => SP\npop BP\nreturn\nlocalSize: 0\nsymbolTable: (empty)"];
1 -> 2;
0 [shape=box, label="Program\ncode: (...)\nstaticSize: 0\nsymbolTable: \n  print_int : (int) -> void\n  print_bool : (bool) -> void\n  print_str : (str) -> void\n  main : () -> int"];
0 -> 1;
}

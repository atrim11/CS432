digraph AST {
5 [shape=box, label="Location name='x'\ntype: int"];
6 [shape=box, label="Literal value=0\nreg: r0\ncode: \nloadI 0 => r0\ntype: int"];
4 [shape=box, label="BinaryOp op='>'\nreg: r1\ncode: \nloadI 0 => r0\ncmp_GT r-1, r0 => r1\ntype: bool"];
4 -> 5;
4 -> 6;
9 [shape=box, label="Location name='x'\ntype: int"];
11 [shape=box, label="Location name='x'\ntype: int"];
12 [shape=box, label="Literal value=1\nreg: r2\ncode: \nloadI 1 => r2\ntype: int"];
10 [shape=box, label="BinaryOp op='-'\nreg: r3\ncode: \nloadI 1 => r2\nsub r-1, r2 => r3\ntype: int"];
10 -> 11;
10 -> 12;
8 [shape=box, label="Assignment"];
8 -> 9;
8 -> 10;
7 [shape=box, label="Block\ncode: \nsymbolTable: (empty)"];
7 -> 8;
3 [shape=box, label="WhileLoop\ncode: \nl1:\nloadI 0 => r0\ncmp_GT r-1, r0 => r1\ncbr r1 => l1, l2\nl2:"];
3 -> 4;
3 -> 7;
14 [shape=box, label="Location name='y'\ntype: int"];
13 [shape=box, label="Return\ncode: \ni2i r-1 => RET"];
13 -> 14;
2 [shape=box, label="Block\ncode: \nl1:\nloadI 0 => r0\ncmp_GT r-1, r0 => r1\ncbr r1 => l1, l2\nl2:\ni2i r-1 => RET\nsymbolTable: (empty)"];
2 -> 3;
2 -> 13;
1 [shape=box, label="FuncDecl name='add'\ncode: \nadd:\ni2i SP => BP\nl1:\nloadI 0 => r0\ncmp_GT r-1, r0 => r1\ncbr r1 => l1, l2\nl2:\ni2i r-1 => RET\nl0:\nreturn\nlocalSize: 0\nsymbolTable: \n  x : int {stack offset=16}\n  y : int {stack offset=24}"];
1 -> 2;
17 [shape=box, label="VarDecl name='a'"];
19 [shape=box, label="Location name='a'\ntype: int"];
20 [shape=box, label="Literal value=3\nreg: r4\ncode: \nloadI 3 => r4\ntype: int"];
18 [shape=box, label="Assignment"];
18 -> 19;
18 -> 20;
23 [shape=box, label="Location name='a'\ntype: int"];
24 [shape=box, label="Literal value=2\nreg: r5\ncode: \nloadI 2 => r5\ntype: int"];
22 [shape=box, label="FuncCall name='add'\ntype: int"];
22 -> 23;
22 -> 24;
21 [shape=box, label="Return\ncode: \ni2i r-1 => RET"];
21 -> 22;
16 [shape=box, label="Block\ncode: \ni2i r-1 => RET\nsymbolTable: \n  a : int {stack offset=-8}"];
16 -> 17;
16 -> 18;
16 -> 21;
15 [shape=box, label="FuncDecl name='main'\ncode: \nmain:\ni2i SP => BP\ni2i r-1 => RET\nl3:\nreturn\nlocalSize: 8\nsymbolTable: (empty)"];
15 -> 16;
0 [shape=box, label="Program\ncode: (...)\nstaticSize: 0\nsymbolTable: \n  print_int : (int) -> void\n  print_bool : (bool) -> void\n  print_str : (str) -> void\n  add : (int, int) -> int\n  main : () -> int"];
0 -> 1;
0 -> 15;
}

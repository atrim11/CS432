==691021== Memcheck, a memory error detector
==691021== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==691021== Using Valgrind-3.22.0 and LibVEX; rerun with -h for copyright info
==691021== Command: ../decaf inputs/given_test.decaf
==691021== 
add:
  push BP
  i2i SP => BP
  addI SP, 0 => BP
  loadAI [BP+16] => r0
  loadAI [BP+24] => r1
  add r0, r1 => r2
  i2i r2 => RET
  jump l0
l0:
  i2i BP => SP
  pop BP
  return
main:
  push BP
  i2i SP => BP
  addI SP, 0 => BP
  loadI 3 => r4
  storeAI r4 => [BP-8]
  loadAI [BP-8] => r5
  push r5
  loadI 2 => r6
  push r6
  call add
  addI SP, 16 => SP
  i2i RET => r0
  i2i r0 => RET
  jump l1
l1:
  i2i BP => SP
  pop BP
  return

==========================
sp=65536 bp=-9999999 ret=-9999999
registers: 
stack:
other memory:
==========================

Executing: push BP

==========================
sp=65528 bp=-9999999 ret=-9999999
registers: 
stack:  65528: -9999999
other memory:
==========================

Executing: i2i SP => BP

==========================
sp=65528 bp=65528 ret=-9999999
registers: 
stack:  65528: -9999999
other memory:
==========================

Executing: addI SP, 0 => BP

==========================
sp=65528 bp=65528 ret=-9999999
registers: 
stack:  65528: -9999999
other memory:
==========================

Executing: loadI 3 => r4

==========================
sp=65528 bp=65528 ret=-9999999
registers:  r4=3
stack:  65528: -9999999
other memory:
==========================

Executing: storeAI r4 => [BP-8]

==========================
sp=65528 bp=65528 ret=-9999999
registers:  r4=3
stack:  65528: -9999999
other memory:  65520: 3
==========================

Executing: loadAI [BP-8] => r5

==========================
sp=65528 bp=65528 ret=-9999999
registers:  r4=3 r5=3
stack:  65528: -9999999
other memory:  65520: 3
==========================

Executing: push r5

==========================
sp=65520 bp=65528 ret=-9999999
registers:  r4=3 r5=3
stack:  65528: -9999999  65520: 3
other memory:
==========================

Executing: loadI 2 => r6

==========================
sp=65520 bp=65528 ret=-9999999
registers:  r4=3 r5=3 r6=2
stack:  65528: -9999999  65520: 3
other memory:
==========================

Executing: push r6

==========================
sp=65512 bp=65528 ret=-9999999
registers:  r4=3 r5=3 r6=2
stack:  65528: -9999999  65520: 3  65512: 2
other memory:
==========================

Executing: call add

==========================
sp=65504 bp=65528 ret=-9999999
registers:  r4=3 r5=3 r6=2
stack:  65528: -9999999  65520: 3  65512: 2  65504: 24
other memory:
==========================

Executing: push BP

==========================
sp=65496 bp=65528 ret=-9999999
registers:  r4=3 r5=3 r6=2
stack:  65528: -9999999  65520: 3  65512: 2  65504: 24  65496: 65528
other memory:
==========================

Executing: i2i SP => BP

==========================
sp=65496 bp=65496 ret=-9999999
registers:  r4=3 r5=3 r6=2
stack:  65528: -9999999  65520: 3  65512: 2  65504: 24  65496: 65528
other memory:
==========================

Executing: addI SP, 0 => BP

==========================
sp=65496 bp=65496 ret=-9999999
registers:  r4=3 r5=3 r6=2
stack:  65528: -9999999  65520: 3  65512: 2  65504: 24  65496: 65528
other memory:
==========================

Executing: loadAI [BP+16] => r0

==========================
sp=65496 bp=65496 ret=-9999999
registers:  r0=2 r4=3 r5=3 r6=2
stack:  65528: -9999999  65520: 3  65512: 2  65504: 24  65496: 65528
other memory:
==========================

Executing: loadAI [BP+24] => r1

==========================
sp=65496 bp=65496 ret=-9999999
registers:  r0=2 r1=3 r4=3 r5=3 r6=2
stack:  65528: -9999999  65520: 3  65512: 2  65504: 24  65496: 65528
other memory:
==========================

Executing: add r0, r1 => r2

==========================
sp=65496 bp=65496 ret=-9999999
registers:  r0=2 r1=3 r2=5 r4=3 r5=3 r6=2
stack:  65528: -9999999  65520: 3  65512: 2  65504: 24  65496: 65528
other memory:
==========================

Executing: i2i r2 => RET

==========================
sp=65496 bp=65496 ret=5
registers:  r0=2 r1=3 r2=5 r4=3 r5=3 r6=2
stack:  65528: -9999999  65520: 3  65512: 2  65504: 24  65496: 65528
other memory:
==========================

Executing: jump l0

==========================
sp=65496 bp=65496 ret=5
registers:  r0=2 r1=3 r2=5 r4=3 r5=3 r6=2
stack:  65528: -9999999  65520: 3  65512: 2  65504: 24  65496: 65528
other memory:
==========================

Executing: i2i BP => SP

==========================
sp=65496 bp=65496 ret=5
registers:  r0=2 r1=3 r2=5 r4=3 r5=3 r6=2
stack:  65528: -9999999  65520: 3  65512: 2  65504: 24  65496: 65528
other memory:
==========================

Executing: pop BP

==========================
sp=65504 bp=65528 ret=5
registers:  r0=2 r1=3 r2=5 r4=3 r5=3 r6=2
stack:  65528: -9999999  65520: 3  65512: 2  65504: 24
other memory:  65496: 65528
==========================

Executing: return

==========================
sp=65512 bp=65528 ret=5
registers:  r0=2 r1=3 r2=5 r4=3 r5=3 r6=2
stack:  65528: -9999999  65520: 3  65512: 2
other memory:  65496: 65528  65504: 24
==========================

Executing: addI SP, 16 => SP

==========================
sp=65528 bp=65528 ret=5
registers:  r0=2 r1=3 r2=5 r4=3 r5=3 r6=2
stack:  65528: -9999999
other memory:  65496: 65528  65504: 24  65512: 2  65520: 3
==========================

Executing: i2i RET => r0

==========================
sp=65528 bp=65528 ret=5
registers:  r0=5 r1=3 r2=5 r4=3 r5=3 r6=2
stack:  65528: -9999999
other memory:  65496: 65528  65504: 24  65512: 2  65520: 3
==========================

Executing: i2i r0 => RET

==========================
sp=65528 bp=65528 ret=5
registers:  r0=5 r1=3 r2=5 r4=3 r5=3 r6=2
stack:  65528: -9999999
other memory:  65496: 65528  65504: 24  65512: 2  65520: 3
==========================

Executing: jump l1

==========================
sp=65528 bp=65528 ret=5
registers:  r0=5 r1=3 r2=5 r4=3 r5=3 r6=2
stack:  65528: -9999999
other memory:  65496: 65528  65504: 24  65512: 2  65520: 3
==========================

Executing: i2i BP => SP

==========================
sp=65528 bp=65528 ret=5
registers:  r0=5 r1=3 r2=5 r4=3 r5=3 r6=2
stack:  65528: -9999999
other memory:  65496: 65528  65504: 24  65512: 2  65520: 3
==========================

Executing: pop BP

==========================
sp=65536 bp=-9999999 ret=5
registers:  r0=5 r1=3 r2=5 r4=3 r5=3 r6=2
stack:
other memory:  65496: 65528  65504: 24  65512: 2  65520: 3  65528: -9999999
==========================

Executing: return
RETURN VALUE = 5
==691021== 
==691021== HEAP SUMMARY:
==691021==     in use at exit: 0 bytes in 0 blocks
==691021==   total heap usage: 2,082 allocs, 2,082 frees, 491,124 bytes allocated
==691021== 
==691021== All heap blocks were freed -- no leaks are possible
==691021== 
==691021== For lists of detected and suppressed errors, rerun with: -s
==691021== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)

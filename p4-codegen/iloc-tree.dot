digraph AST {
5 [shape=box, label="Location name='x'\nreg: r0\ncode: \nloadAI [BP+16] => r0\ntype: int"];
6 [shape=box, label="Location name='y'\nreg: r1\ncode: \nloadAI [BP+24] => r1\ntype: int"];
4 [shape=box, label="BinaryOp op='+'\nreg: r2\ncode: \nloadAI [BP+16] => r0\nloadAI [BP+24] => r1\nadd r0, r1 => r2\ntype: int"];
4 -> 5;
4 -> 6;
3 [shape=box, label="Return\ncode: \nloadAI [BP+16] => r0\nloadAI [BP+24] => r1\nadd r0, r1 => r2\ni2i r2 => RET\njump l0"];
3 -> 4;
2 [shape=box, label="Block\ncode: \nloadAI [BP+16] => r0\nloadAI [BP+24] => r1\nadd r0, r1 => r2\ni2i r2 => RET\njump l0\nsymbolTable: (empty)"];
2 -> 3;
1 [shape=box, label="FuncDecl name='call1'\ncode: \ncall1:\npush BP\ni2i SP => BP\naddI SP, 0 => SP\nloadAI [BP+16] => r0\nloadAI [BP+24] => r1\nadd r0, r1 => r2\ni2i r2 => RET\njump l0\nl0:\ni2i BP => SP\npop BP\nreturn\nlocalSize: 0\nsymbolTable: \n  x : int {stack offset=16}\n  y : int {stack offset=24}"];
1 -> 2;
11 [shape=box, label="Location name='x'\nreg: r3\ncode: \nloadAI [BP+16] => r3\ntype: int"];
12 [shape=box, label="Location name='y'\nreg: r4\ncode: \nloadAI [BP+24] => r4\ntype: int"];
10 [shape=box, label="BinaryOp op='-'\nreg: r5\ncode: \nloadAI [BP+16] => r3\nloadAI [BP+24] => r4\nsub r3, r4 => r5\ntype: int"];
10 -> 11;
10 -> 12;
9 [shape=box, label="Return\ncode: \nloadAI [BP+16] => r3\nloadAI [BP+24] => r4\nsub r3, r4 => r5\ni2i r5 => RET\njump l1"];
9 -> 10;
8 [shape=box, label="Block\ncode: \nloadAI [BP+16] => r3\nloadAI [BP+24] => r4\nsub r3, r4 => r5\ni2i r5 => RET\njump l1\nsymbolTable: (empty)"];
8 -> 9;
7 [shape=box, label="FuncDecl name='call2'\ncode: \ncall2:\npush BP\ni2i SP => BP\naddI SP, 0 => SP\nloadAI [BP+16] => r3\nloadAI [BP+24] => r4\nsub r3, r4 => r5\ni2i r5 => RET\njump l1\nl1:\ni2i BP => SP\npop BP\nreturn\nlocalSize: 0\nsymbolTable: \n  x : int {stack offset=16}\n  y : int {stack offset=24}"];
7 -> 8;
17 [shape=box, label="Location name='x'\nreg: r6\ncode: \nloadAI [BP+16] => r6\ntype: int"];
18 [shape=box, label="Location name='y'\nreg: r7\ncode: \nloadAI [BP+24] => r7\ntype: int"];
16 [shape=box, label="BinaryOp op='*'\nreg: r8\ncode: \nloadAI [BP+16] => r6\nloadAI [BP+24] => r7\nmult r6, r7 => r8\ntype: int"];
16 -> 17;
16 -> 18;
15 [shape=box, label="Return\ncode: \nloadAI [BP+16] => r6\nloadAI [BP+24] => r7\nmult r6, r7 => r8\ni2i r8 => RET\njump l2"];
15 -> 16;
14 [shape=box, label="Block\ncode: \nloadAI [BP+16] => r6\nloadAI [BP+24] => r7\nmult r6, r7 => r8\ni2i r8 => RET\njump l2\nsymbolTable: (empty)"];
14 -> 15;
13 [shape=box, label="FuncDecl name='call3'\ncode: \ncall3:\npush BP\ni2i SP => BP\naddI SP, 0 => SP\nloadAI [BP+16] => r6\nloadAI [BP+24] => r7\nmult r6, r7 => r8\ni2i r8 => RET\njump l2\nl2:\ni2i BP => SP\npop BP\nreturn\nlocalSize: 0\nsymbolTable: \n  x : int {stack offset=16}\n  y : int {stack offset=24}"];
13 -> 14;
23 [shape=box, label="Location name='x'\nreg: r9\ncode: \nloadAI [BP+16] => r9\ntype: int"];
24 [shape=box, label="Location name='y'\nreg: r10\ncode: \nloadAI [BP+24] => r10\ntype: int"];
22 [shape=box, label="BinaryOp op='/'\nreg: r11\ncode: \nloadAI [BP+16] => r9\nloadAI [BP+24] => r10\ndiv r9, r10 => r11\ntype: int"];
22 -> 23;
22 -> 24;
21 [shape=box, label="Return\ncode: \nloadAI [BP+16] => r9\nloadAI [BP+24] => r10\ndiv r9, r10 => r11\ni2i r11 => RET\njump l3"];
21 -> 22;
20 [shape=box, label="Block\ncode: \nloadAI [BP+16] => r9\nloadAI [BP+24] => r10\ndiv r9, r10 => r11\ni2i r11 => RET\njump l3\nsymbolTable: (empty)"];
20 -> 21;
19 [shape=box, label="FuncDecl name='call4'\ncode: \ncall4:\npush BP\ni2i SP => BP\naddI SP, 0 => SP\nloadAI [BP+16] => r9\nloadAI [BP+24] => r10\ndiv r9, r10 => r11\ni2i r11 => RET\njump l3\nl3:\ni2i BP => SP\npop BP\nreturn\nlocalSize: 0\nsymbolTable: \n  x : int {stack offset=16}\n  y : int {stack offset=24}"];
19 -> 20;
29 [shape=box, label="Location name='x'\nreg: r12\ncode: \nloadAI [BP+16] => r12\ntype: int"];
30 [shape=box, label="Location name='y'\nreg: r13\ncode: \nloadAI [BP+24] => r13\ntype: int"];
28 [shape=box, label="BinaryOp op='%'\nreg: r14\ncode: \nloadAI [BP+16] => r12\nloadAI [BP+24] => r13\ndiv r12, r13 => r15\nmult r15, r13 => r16\nsub r12, r16 => r14\ntype: int"];
28 -> 29;
28 -> 30;
27 [shape=box, label="Return\ncode: \nloadAI [BP+16] => r12\nloadAI [BP+24] => r13\ndiv r12, r13 => r15\nmult r15, r13 => r16\nsub r12, r16 => r14\ni2i r14 => RET\njump l4"];
27 -> 28;
26 [shape=box, label="Block\ncode: \nloadAI [BP+16] => r12\nloadAI [BP+24] => r13\ndiv r12, r13 => r15\nmult r15, r13 => r16\nsub r12, r16 => r14\ni2i r14 => RET\njump l4\nsymbolTable: (empty)"];
26 -> 27;
25 [shape=box, label="FuncDecl name='call5'\ncode: \ncall5:\npush BP\ni2i SP => BP\naddI SP, 0 => SP\nloadAI [BP+16] => r12\nloadAI [BP+24] => r13\ndiv r12, r13 => r15\nmult r15, r13 => r16\nsub r12, r16 => r14\ni2i r14 => RET\njump l4\nl4:\ni2i BP => SP\npop BP\nreturn\nlocalSize: 0\nsymbolTable: \n  x : int {stack offset=16}\n  y : int {stack offset=24}"];
25 -> 26;
33 [shape=box, label="VarDecl name='a'"];
34 [shape=box, label="VarDecl name='b'"];
36 [shape=box, label="Location name='a'\ntype: int"];
37 [shape=box, label="Literal value=10\nreg: r17\ncode: \nloadI 10 => r17\ntype: int"];
35 [shape=box, label="Assignment\ncode: \nloadI 10 => r17\nstoreAI r17 => [BP-8]"];
35 -> 36;
35 -> 37;
39 [shape=box, label="Location name='b'\ntype: int"];
40 [shape=box, label="Literal value=5\nreg: r18\ncode: \nloadI 5 => r18\ntype: int"];
38 [shape=box, label="Assignment\ncode: \nloadI 5 => r18\nstoreAI r18 => [BP-16]"];
38 -> 39;
38 -> 40;
47 [shape=box, label="Location name='a'\nreg: r19\ncode: \nloadAI [BP-8] => r19\ntype: int"];
48 [shape=box, label="Location name='b'\nreg: r20\ncode: \nloadAI [BP-16] => r20\ntype: int"];
46 [shape=box, label="FuncCall name='call5'\nreg: r21\ncode: \nloadAI [BP-8] => r19\nloadAI [BP-16] => r20\npush r20\npush r19\ncall call5\naddI SP, 16 => SP\ni2i RET => r21\ntype: int"];
46 -> 47;
46 -> 48;
49 [shape=box, label="Location name='b'\nreg: r22\ncode: \nloadAI [BP-16] => r22\ntype: int"];
45 [shape=box, label="FuncCall name='call4'\nreg: r23\ncode: \nloadAI [BP-8] => r19\nloadAI [BP-16] => r20\npush r20\npush r19\ncall call5\naddI SP, 16 => SP\ni2i RET => r21\nloadAI [BP-16] => r22\npush r22\npush r21\ncall call4\naddI SP, 16 => SP\ni2i RET => r23\ntype: int"];
45 -> 46;
45 -> 49;
50 [shape=box, label="Location name='b'\nreg: r24\ncode: \nloadAI [BP-16] => r24\ntype: int"];
44 [shape=box, label="FuncCall name='call3'\nreg: r25\ncode: \nloadAI [BP-8] => r19\nloadAI [BP-16] => r20\npush r20\npush r19\ncall call5\naddI SP, 16 => SP\ni2i RET => r21\nloadAI [BP-16] => r22\npush r22\npush r21\ncall call4\naddI SP, 16 => SP\ni2i RET => r23\nloadAI [BP-16] => r24\npush r24\npush r23\ncall call3\naddI SP, 16 => SP\ni2i RET => r25\ntype: int"];
44 -> 45;
44 -> 50;
51 [shape=box, label="Location name='b'\nreg: r26\ncode: \nloadAI [BP-16] => r26\ntype: int"];
43 [shape=box, label="FuncCall name='call2'\nreg: r27\ncode: \nloadAI [BP-8] => r19\nloadAI [BP-16] => r20\npush r20\npush r19\ncall call5\naddI SP, 16 => SP\ni2i RET => r21\nloadAI [BP-16] => r22\npush r22\npush r21\ncall call4\naddI SP, 16 => SP\ni2i RET => r23\nloadAI [BP-16] => r24\npush r24\npush r23\ncall call3\naddI SP, 16 => SP\ni2i RET => r25\nloadAI [BP-16] => r26\npush r26\npush r25\ncall call2\naddI SP, 16 => SP\ni2i RET => r27\ntype: int"];
43 -> 44;
43 -> 51;
52 [shape=box, label="Location name='b'\nreg: r28\ncode: \nloadAI [BP-16] => r28\ntype: int"];
42 [shape=box, label="FuncCall name='call1'\nreg: r29\ncode: \nloadAI [BP-8] => r19\nloadAI [BP-16] => r20\npush r20\npush r19\ncall call5\naddI SP, 16 => SP\ni2i RET => r21\nloadAI [BP-16] => r22\npush r22\npush r21\ncall call4\naddI SP, 16 => SP\ni2i RET => r23\nloadAI [BP-16] => r24\npush r24\npush r23\ncall call3\naddI SP, 16 => SP\ni2i RET => r25\nloadAI [BP-16] => r26\npush r26\npush r25\ncall call2\naddI SP, 16 => SP\ni2i RET => r27\nloadAI [BP-16] => r28\npush r28\npush r27\ncall call1\naddI SP, 16 => SP\ni2i RET => r29\ntype: int"];
42 -> 43;
42 -> 52;
41 [shape=box, label="Return\ncode: \nloadAI [BP-8] => r19\nloadAI [BP-16] => r20\npush r20\npush r19\ncall call5\naddI SP, 16 => SP\ni2i RET => r21\nloadAI [BP-16] => r22\npush r22\npush r21\ncall call4\naddI SP, 16 => SP\ni2i RET => r23\nloadAI [BP-16] => r24\npush r24\npush r23\ncall call3\naddI SP, 16 => SP\ni2i RET => r25\nloadAI [BP-16] => r26\npush r26\npush r25\ncall call2\naddI SP, 16 => SP\ni2i RET => r27\nloadAI [BP-16] => r28\npush r28\npush r27\ncall call1\naddI SP, 16 => SP\ni2i RET => r29\ni2i r29 => RET\njump l5"];
41 -> 42;
32 [shape=box, label="Block\ncode: \nloadI 10 => r17\nstoreAI r17 => [BP-8]\nloadI 5 => r18\nstoreAI r18 => [BP-16]\nloadAI [BP-8] => r19\nloadAI [BP-16] => r20\npush r20\npush r19\ncall call5\naddI SP, 16 => SP\ni2i RET => r21\nloadAI [BP-16] => r22\npush r22\npush r21\ncall call4\naddI SP, 16 => SP\ni2i RET => r23\nloadAI [BP-16] => r24\npush r24\npush r23\ncall call3\naddI SP, 16 => SP\ni2i RET => r25\nloadAI [BP-16] => r26\npush r26\npush r25\ncall call2\naddI SP, 16 => SP\ni2i RET => r27\nloadAI [BP-16] => r28\npush r28\npush r27\ncall call1\naddI SP, 16 => SP\ni2i RET => r29\ni2i r29 => RET\njump l5\nsymbolTable: \n  a : int {stack offset=-8}\n  b : int {stack offset=-16}"];
32 -> 33;
32 -> 34;
32 -> 35;
32 -> 38;
32 -> 41;
31 [shape=box, label="FuncDecl name='main'\ncode: \nmain:\npush BP\ni2i SP => BP\naddI SP, -16 => SP\nloadI 10 => r17\nstoreAI r17 => [BP-8]\nloadI 5 => r18\nstoreAI r18 => [BP-16]\nloadAI [BP-8] => r19\nloadAI [BP-16] => r20\npush r20\npush r19\ncall call5\naddI SP, 16 => SP\ni2i RET => r21\nloadAI [BP-16] => r22\npush r22\npush r21\ncall call4\naddI SP, 16 => SP\ni2i RET => r23\nloadAI [BP-16] => r24\npush r24\npush r23\ncall call3\naddI SP, 16 => SP\ni2i RET => r25\nloadAI [BP-16] => r26\npush r26\npush r25\ncall call2\naddI SP, 16 => SP\ni2i RET => r27\nloadAI [BP-16] => r28\npush r28\npush r27\ncall call1\naddI SP, 16 => SP\ni2i RET => r29\ni2i r29 => RET\njump l5\nl5:\ni2i BP => SP\npop BP\nreturn\nlocalSize: 16\nsymbolTable: (empty)"];
31 -> 32;
0 [shape=box, label="Program\ncode: (...)\nstaticSize: 0\nsymbolTable: \n  print_int : (int) -> void\n  print_bool : (bool) -> void\n  print_str : (str) -> void\n  call1 : (int, int) -> int\n  call2 : (int, int) -> int\n  call3 : (int, int) -> int\n  call4 : (int, int) -> int\n  call5 : (int, int) -> int\n  main : () -> int"];
0 -> 1;
0 -> 7;
0 -> 13;
0 -> 19;
0 -> 25;
0 -> 31;
}

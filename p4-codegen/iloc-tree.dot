digraph AST {
3 [shape=box, label="VarDecl name='a'"];
5 [shape=box, label="Location name='a'\nreg: r0\ntype: int"];
6 [shape=box, label="Literal value=0\nreg: r0\ncode: \nloadI 0 => r0\ntype: int"];
4 [shape=box, label="Assignment\nreg: r0\ncode: \nloadI 0 => r0\nstoreAI r0 => [BP-8]"];
4 -> 5;
4 -> 6;
9 [shape=box, label="Location name='a'\ntype: int"];
10 [shape=box, label="Literal value=10\nreg: r1\ncode: \nloadI 10 => r1\ntype: int"];
8 [shape=box, label="BinaryOp op='<'\nreg: r2\ncode: \nloadI 10 => r1\ncmp_LT r-1, r1 => r2\ntype: bool"];
8 -> 9;
8 -> 10;
13 [shape=box, label="Location name='a'\nreg: r4\ntype: int"];
15 [shape=box, label="Location name='a'\ntype: int"];
16 [shape=box, label="Literal value=1\nreg: r3\ncode: \nloadI 1 => r3\ntype: int"];
14 [shape=box, label="BinaryOp op='+'\nreg: r4\ncode: \nloadI 1 => r3\nadd r-1, r3 => r4\ntype: int"];
14 -> 15;
14 -> 16;
12 [shape=box, label="Assignment\nreg: r4\ncode: \nloadI 1 => r3\nadd r-1, r3 => r4\nstoreAI r4 => [BP-8]"];
12 -> 13;
12 -> 14;
11 [shape=box, label="Block\ncode: \nloadI 1 => r3\nadd r-1, r3 => r4\nstoreAI r4 => [BP-8]\nsymbolTable: (empty)"];
11 -> 12;
7 [shape=box, label="WhileLoop\ncode: \nl1:\nloadI 10 => r1\ncmp_LT r-1, r1 => r2\nl2:\ncbr r2 => l2, l3\nloadI 1 => r3\nadd r-1, r3 => r4\nstoreAI r4 => [BP-8]\njump l1\nl3:"];
7 -> 8;
7 -> 11;
18 [shape=box, label="Location name='a'\ntype: int"];
17 [shape=box, label="Return\ncode: \nloadAI [BP-8] => r5\ni2i r5 => RET\njump l0"];
17 -> 18;
2 [shape=box, label="Block\ncode: \nloadI 0 => r0\nstoreAI r0 => [BP-8]\nl1:\nloadI 10 => r1\ncmp_LT r-1, r1 => r2\nl2:\ncbr r2 => l2, l3\nloadI 1 => r3\nadd r-1, r3 => r4\nstoreAI r4 => [BP-8]\njump l1\nl3:\nloadAI [BP-8] => r5\ni2i r5 => RET\njump l0\nsymbolTable: \n  a : int {stack offset=-8}"];
2 -> 3;
2 -> 4;
2 -> 7;
2 -> 17;
1 [shape=box, label="FuncDecl name='main'\ncode: \nmain:\npush BP\ni2i SP => BP\naddI SP, -8 => SP\nloadI 0 => r0\nstoreAI r0 => [BP-8]\nl1:\nloadI 10 => r1\ncmp_LT r-1, r1 => r2\nl2:\ncbr r2 => l2, l3\nloadI 1 => r3\nadd r-1, r3 => r4\nstoreAI r4 => [BP-8]\njump l1\nl3:\nloadAI [BP-8] => r5\ni2i r5 => RET\njump l0\nl0:\ni2i BP => SP\npop BP\nreturn\nlocalSize: 8\nsymbolTable: (empty)"];
1 -> 2;
0 [shape=box, label="Program\ncode: (...)\nstaticSize: 0\nsymbolTable: \n  print_int : (int) -> void\n  print_bool : (bool) -> void\n  print_str : (str) -> void\n  main : () -> int"];
0 -> 1;
}

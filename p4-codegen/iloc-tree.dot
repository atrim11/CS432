digraph AST {
3 [shape=box, label="VarDecl name='a'"];
4 [shape=box, label="VarDecl name='b'"];
5 [shape=box, label="VarDecl name='c'"];
6 [shape=box, label="VarDecl name='d'"];
7 [shape=box, label="VarDecl name='e'"];
9 [shape=box, label="Location name='a'\ntype: int"];
10 [shape=box, label="Literal value=1\nreg: r0\ncode: \nloadI 1 => r0\ntype: int"];
8 [shape=box, label="Assignment\ncode: \nloadI 1 => r0\nstoreAI r0 => [BP-8]"];
8 -> 9;
8 -> 10;
12 [shape=box, label="Location name='b'\ntype: int"];
13 [shape=box, label="Literal value=2\nreg: r1\ncode: \nloadI 2 => r1\ntype: int"];
11 [shape=box, label="Assignment\ncode: \nloadI 2 => r1\nstoreAI r1 => [BP-16]"];
11 -> 12;
11 -> 13;
15 [shape=box, label="Location name='c'\ntype: int"];
16 [shape=box, label="Literal value=3\nreg: r2\ncode: \nloadI 3 => r2\ntype: int"];
14 [shape=box, label="Assignment\ncode: \nloadI 3 => r2\nstoreAI r2 => [BP-24]"];
14 -> 15;
14 -> 16;
18 [shape=box, label="Location name='d'\ntype: int"];
19 [shape=box, label="Literal value=4\nreg: r3\ncode: \nloadI 4 => r3\ntype: int"];
17 [shape=box, label="Assignment\ncode: \nloadI 4 => r3\nstoreAI r3 => [BP-32]"];
17 -> 18;
17 -> 19;
21 [shape=box, label="Location name='e'\ntype: int"];
22 [shape=box, label="Literal value=5\nreg: r4\ncode: \nloadI 5 => r4\ntype: int"];
20 [shape=box, label="Assignment\ncode: \nloadI 5 => r4\nstoreAI r4 => [BP-40]"];
20 -> 21;
20 -> 22;
25 [shape=box, label="Location name='a'\nreg: r5\ncode: \nloadAI [BP-8] => r5\ntype: int"];
26 [shape=box, label="Literal value=1\nreg: r6\ncode: \nloadI 1 => r6\ntype: int"];
24 [shape=box, label="BinaryOp op='=='\nreg: r7\ncode: \nloadAI [BP-8] => r5\nloadI 1 => r6\ncmp_EQ r5, r6 => r7\ntype: bool"];
24 -> 25;
24 -> 26;
30 [shape=box, label="Location name='b'\nreg: r8\ncode: \nloadAI [BP-16] => r8\ntype: int"];
31 [shape=box, label="Literal value=2\nreg: r9\ncode: \nloadI 2 => r9\ntype: int"];
29 [shape=box, label="BinaryOp op='=='\nreg: r10\ncode: \nloadAI [BP-16] => r8\nloadI 2 => r9\ncmp_EQ r8, r9 => r10\ntype: bool"];
29 -> 30;
29 -> 31;
35 [shape=box, label="Location name='c'\nreg: r11\ncode: \nloadAI [BP-24] => r11\ntype: int"];
36 [shape=box, label="Literal value=3\nreg: r12\ncode: \nloadI 3 => r12\ntype: int"];
34 [shape=box, label="BinaryOp op='=='\nreg: r13\ncode: \nloadAI [BP-24] => r11\nloadI 3 => r12\ncmp_EQ r11, r12 => r13\ntype: bool"];
34 -> 35;
34 -> 36;
40 [shape=box, label="Location name='d'\nreg: r14\ncode: \nloadAI [BP-32] => r14\ntype: int"];
41 [shape=box, label="Literal value=4\nreg: r15\ncode: \nloadI 4 => r15\ntype: int"];
39 [shape=box, label="BinaryOp op='=='\nreg: r16\ncode: \nloadAI [BP-32] => r14\nloadI 4 => r15\ncmp_EQ r14, r15 => r16\ntype: bool"];
39 -> 40;
39 -> 41;
45 [shape=box, label="Location name='e'\nreg: r17\ncode: \nloadAI [BP-40] => r17\ntype: int"];
46 [shape=box, label="Literal value=5\nreg: r18\ncode: \nloadI 5 => r18\ntype: int"];
44 [shape=box, label="BinaryOp op='=='\nreg: r19\ncode: \nloadAI [BP-40] => r17\nloadI 5 => r18\ncmp_EQ r17, r18 => r19\ntype: bool"];
44 -> 45;
44 -> 46;
49 [shape=box, label="Literal value=1\nreg: r20\ncode: \nloadI 1 => r20\ntype: int"];
48 [shape=box, label="Return\ncode: \nloadI 1 => r20\ni2i r20 => RET\njump l0"];
48 -> 49;
47 [shape=box, label="Block\ncode: \nloadI 1 => r20\ni2i r20 => RET\njump l0\nsymbolTable: (empty)"];
47 -> 48;
43 [shape=box, label="Conditional\ncode: \nloadAI [BP-40] => r17\nloadI 5 => r18\ncmp_EQ r17, r18 => r19\ncbr r19 => l9, l10\nl9:\nloadI 1 => r20\ni2i r20 => RET\njump l0\nl10:"];
43 -> 44;
43 -> 47;
42 [shape=box, label="Block\ncode: \nloadAI [BP-40] => r17\nloadI 5 => r18\ncmp_EQ r17, r18 => r19\ncbr r19 => l9, l10\nl9:\nloadI 1 => r20\ni2i r20 => RET\njump l0\nl10:\nsymbolTable: (empty)"];
42 -> 43;
38 [shape=box, label="Conditional\ncode: \nloadAI [BP-32] => r14\nloadI 4 => r15\ncmp_EQ r14, r15 => r16\ncbr r16 => l7, l8\nl7:\nloadAI [BP-40] => r17\nloadI 5 => r18\ncmp_EQ r17, r18 => r19\ncbr r19 => l9, l10\nl9:\nloadI 1 => r20\ni2i r20 => RET\njump l0\nl10:\nl8:"];
38 -> 39;
38 -> 42;
37 [shape=box, label="Block\ncode: \nloadAI [BP-32] => r14\nloadI 4 => r15\ncmp_EQ r14, r15 => r16\ncbr r16 => l7, l8\nl7:\nloadAI [BP-40] => r17\nloadI 5 => r18\ncmp_EQ r17, r18 => r19\ncbr r19 => l9, l10\nl9:\nloadI 1 => r20\ni2i r20 => RET\njump l0\nl10:\nl8:\nsymbolTable: (empty)"];
37 -> 38;
33 [shape=box, label="Conditional\ncode: \nloadAI [BP-24] => r11\nloadI 3 => r12\ncmp_EQ r11, r12 => r13\ncbr r13 => l5, l6\nl5:\nloadAI [BP-32] => r14\nloadI 4 => r15\ncmp_EQ r14, r15 => r16\ncbr r16 => l7, l8\nl7:\nloadAI [BP-40] => r17\nloadI 5 => r18\ncmp_EQ r17, r18 => r19\ncbr r19 => l9, l10\nl9:\nloadI 1 => r20\ni2i r20 => RET\njump l0\nl10:\nl8:\nl6:"];
33 -> 34;
33 -> 37;
32 [shape=box, label="Block\ncode: \nloadAI [BP-24] => r11\nloadI 3 => r12\ncmp_EQ r11, r12 => r13\ncbr r13 => l5, l6\nl5:\nloadAI [BP-32] => r14\nloadI 4 => r15\ncmp_EQ r14, r15 => r16\ncbr r16 => l7, l8\nl7:\nloadAI [BP-40] => r17\nloadI 5 => r18\ncmp_EQ r17, r18 => r19\ncbr r19 => l9, l10\nl9:\nloadI 1 => r20\ni2i r20 => RET\njump l0\nl10:\nl8:\nl6:\nsymbolTable: (empty)"];
32 -> 33;
28 [shape=box, label="Conditional\ncode: \nloadAI [BP-16] => r8\nloadI 2 => r9\ncmp_EQ r8, r9 => r10\ncbr r10 => l3, l4\nl3:\nloadAI [BP-24] => r11\nloadI 3 => r12\ncmp_EQ r11, r12 => r13\ncbr r13 => l5, l6\nl5:\nloadAI [BP-32] => r14\nloadI 4 => r15\ncmp_EQ r14, r15 => r16\ncbr r16 => l7, l8\nl7:\nloadAI [BP-40] => r17\nloadI 5 => r18\ncmp_EQ r17, r18 => r19\ncbr r19 => l9, l10\nl9:\nloadI 1 => r20\ni2i r20 => RET\njump l0\nl10:\nl8:\nl6:\nl4:"];
28 -> 29;
28 -> 32;
27 [shape=box, label="Block\ncode: \nloadAI [BP-16] => r8\nloadI 2 => r9\ncmp_EQ r8, r9 => r10\ncbr r10 => l3, l4\nl3:\nloadAI [BP-24] => r11\nloadI 3 => r12\ncmp_EQ r11, r12 => r13\ncbr r13 => l5, l6\nl5:\nloadAI [BP-32] => r14\nloadI 4 => r15\ncmp_EQ r14, r15 => r16\ncbr r16 => l7, l8\nl7:\nloadAI [BP-40] => r17\nloadI 5 => r18\ncmp_EQ r17, r18 => r19\ncbr r19 => l9, l10\nl9:\nloadI 1 => r20\ni2i r20 => RET\njump l0\nl10:\nl8:\nl6:\nl4:\nsymbolTable: (empty)"];
27 -> 28;
52 [shape=box, label="Literal value=0\nreg: r21\ncode: \nloadI 0 => r21\ntype: int"];
51 [shape=box, label="Return\ncode: \nloadI 0 => r21\ni2i r21 => RET\njump l0"];
51 -> 52;
50 [shape=box, label="Block\ncode: \nloadI 0 => r21\ni2i r21 => RET\njump l0\nsymbolTable: (empty)"];
50 -> 51;
23 [shape=box, label="Conditional\ncode: \nloadAI [BP-8] => r5\nloadI 1 => r6\ncmp_EQ r5, r6 => r7\ncbr r7 => l1, l2\nl1:\nloadAI [BP-16] => r8\nloadI 2 => r9\ncmp_EQ r8, r9 => r10\ncbr r10 => l3, l4\nl3:\nloadAI [BP-24] => r11\nloadI 3 => r12\ncmp_EQ r11, r12 => r13\ncbr r13 => l5, l6\nl5:\nloadAI [BP-32] => r14\nloadI 4 => r15\ncmp_EQ r14, r15 => r16\ncbr r16 => l7, l8\nl7:\nloadAI [BP-40] => r17\nloadI 5 => r18\ncmp_EQ r17, r18 => r19\ncbr r19 => l9, l10\nl9:\nloadI 1 => r20\ni2i r20 => RET\njump l0\nl10:\nl8:\nl6:\nl4:\njump l11\nl2:\nloadI 0 => r21\ni2i r21 => RET\njump l0\nl11:"];
23 -> 24;
23 -> 27;
23 -> 50;
2 [shape=box, label="Block\ncode: \nloadI 1 => r0\nstoreAI r0 => [BP-8]\nloadI 2 => r1\nstoreAI r1 => [BP-16]\nloadI 3 => r2\nstoreAI r2 => [BP-24]\nloadI 4 => r3\nstoreAI r3 => [BP-32]\nloadI 5 => r4\nstoreAI r4 => [BP-40]\nloadAI [BP-8] => r5\nloadI 1 => r6\ncmp_EQ r5, r6 => r7\ncbr r7 => l1, l2\nl1:\nloadAI [BP-16] => r8\nloadI 2 => r9\ncmp_EQ r8, r9 => r10\ncbr r10 => l3, l4\nl3:\nloadAI [BP-24] => r11\nloadI 3 => r12\ncmp_EQ r11, r12 => r13\ncbr r13 => l5, l6\nl5:\nloadAI [BP-32] => r14\nloadI 4 => r15\ncmp_EQ r14, r15 => r16\ncbr r16 => l7, l8\nl7:\nloadAI [BP-40] => r17\nloadI 5 => r18\ncmp_EQ r17, r18 => r19\ncbr r19 => l9, l10\nl9:\nloadI 1 => r20\ni2i r20 => RET\njump l0\nl10:\nl8:\nl6:\nl4:\njump l11\nl2:\nloadI 0 => r21\ni2i r21 => RET\njump l0\nl11:\nsymbolTable: \n  a : int {stack offset=-8}\n  b : int {stack offset=-16}\n  c : int {stack offset=-24}\n  d : int {stack offset=-32}\n  e : int {stack offset=-40}"];
2 -> 3;
2 -> 4;
2 -> 5;
2 -> 6;
2 -> 7;
2 -> 8;
2 -> 11;
2 -> 14;
2 -> 17;
2 -> 20;
2 -> 23;
1 [shape=box, label="FuncDecl name='main'\ncode: \nmain:\npush BP\ni2i SP => BP\naddI SP, -40 => SP\nloadI 1 => r0\nstoreAI r0 => [BP-8]\nloadI 2 => r1\nstoreAI r1 => [BP-16]\nloadI 3 => r2\nstoreAI r2 => [BP-24]\nloadI 4 => r3\nstoreAI r3 => [BP-32]\nloadI 5 => r4\nstoreAI r4 => [BP-40]\nloadAI [BP-8] => r5\nloadI 1 => r6\ncmp_EQ r5, r6 => r7\ncbr r7 => l1, l2\nl1:\nloadAI [BP-16] => r8\nloadI 2 => r9\ncmp_EQ r8, r9 => r10\ncbr r10 => l3, l4\nl3:\nloadAI [BP-24] => r11\nloadI 3 => r12\ncmp_EQ r11, r12 => r13\ncbr r13 => l5, l6\nl5:\nloadAI [BP-32] => r14\nloadI 4 => r15\ncmp_EQ r14, r15 => r16\ncbr r16 => l7, l8\nl7:\nloadAI [BP-40] => r17\nloadI 5 => r18\ncmp_EQ r17, r18 => r19\ncbr r19 => l9, l10\nl9:\nloadI 1 => r20\ni2i r20 => RET\njump l0\nl10:\nl8:\nl6:\nl4:\njump l11\nl2:\nloadI 0 => r21\ni2i r21 => RET\njump l0\nl11:\nl0:\ni2i BP => SP\npop BP\nreturn\nlocalSize: 40\nsymbolTable: (empty)"];
1 -> 2;
0 [shape=box, label="Program\ncode: (...)\nstaticSize: 0\nsymbolTable: \n  print_int : (int) -> void\n  print_bool : (bool) -> void\n  print_str : (str) -> void\n  main : () -> int"];
0 -> 1;
}

digraph AST {
3 [shape=box, label="VarDecl name='count'"];
4 [shape=box, label="VarDecl name='i'"];
6 [shape=box, label="Location name='count'\ntype: int"];
7 [shape=box, label="Literal value=0\nreg: r0\ncode: \nloadI 0 => r0\ntype: int"];
5 [shape=box, label="Assignment\ncode: \nloadI 0 => r0\nstoreAI r0 => [BP-8]"];
5 -> 6;
5 -> 7;
9 [shape=box, label="Location name='i'\ntype: int"];
10 [shape=box, label="Literal value=0\nreg: r1\ncode: \nloadI 0 => r1\ntype: int"];
8 [shape=box, label="Assignment\ncode: \nloadI 0 => r1\nstoreAI r1 => [BP-16]"];
8 -> 9;
8 -> 10;
12 [shape=box, label="Literal value=true\nreg: r2\ncode: \nloadI 1 => r2\ntype: bool"];
15 [shape=box, label="Location name='i'\ntype: int"];
17 [shape=box, label="Location name='i'\nreg: r3\ncode: \nloadAI [BP-16] => r3\ntype: int"];
18 [shape=box, label="Literal value=1\nreg: r4\ncode: \nloadI 1 => r4\ntype: int"];
16 [shape=box, label="BinaryOp op='+'\nreg: r5\ncode: \nloadAI [BP-16] => r3\nloadI 1 => r4\nadd r3, r4 => r5\ntype: int"];
16 -> 17;
16 -> 18;
14 [shape=box, label="Assignment\ncode: \nloadAI [BP-16] => r3\nloadI 1 => r4\nadd r3, r4 => r5\nstoreAI r5 => [BP-16]"];
14 -> 15;
14 -> 16;
21 [shape=box, label="Location name='i'\nreg: r6\ncode: \nloadAI [BP-16] => r6\ntype: int"];
22 [shape=box, label="Literal value=5\nreg: r7\ncode: \nloadI 5 => r7\ntype: int"];
20 [shape=box, label="BinaryOp op='>'\nreg: r8\ncode: \nloadAI [BP-16] => r6\nloadI 5 => r7\ncmp_GT r6, r7 => r8\ntype: bool"];
20 -> 21;
20 -> 22;
24 [shape=box, label="Break\ncode: \njump l3"];
23 [shape=box, label="Block\ncode: \njump l3\nsymbolTable: (empty)"];
23 -> 24;
27 [shape=box, label="Location name='count'\ntype: int"];
29 [shape=box, label="Location name='count'\nreg: r9\ncode: \nloadAI [BP-8] => r9\ntype: int"];
30 [shape=box, label="Literal value=1\nreg: r10\ncode: \nloadI 1 => r10\ntype: int"];
28 [shape=box, label="BinaryOp op='+'\nreg: r11\ncode: \nloadAI [BP-8] => r9\nloadI 1 => r10\nadd r9, r10 => r11\ntype: int"];
28 -> 29;
28 -> 30;
26 [shape=box, label="Assignment\ncode: \nloadAI [BP-8] => r9\nloadI 1 => r10\nadd r9, r10 => r11\nstoreAI r11 => [BP-8]"];
26 -> 27;
26 -> 28;
25 [shape=box, label="Block\ncode: \nloadAI [BP-8] => r9\nloadI 1 => r10\nadd r9, r10 => r11\nstoreAI r11 => [BP-8]\nsymbolTable: (empty)"];
25 -> 26;
19 [shape=box, label="Conditional\ncode: \nloadAI [BP-16] => r6\nloadI 5 => r7\ncmp_GT r6, r7 => r8\ncbr r8 => l4, l5\nl4:\njump l3\njump l6\nl5:\nloadAI [BP-8] => r9\nloadI 1 => r10\nadd r9, r10 => r11\nstoreAI r11 => [BP-8]\nl6:"];
19 -> 20;
19 -> 23;
19 -> 25;
13 [shape=box, label="Block\ncode: \nloadAI [BP-16] => r3\nloadI 1 => r4\nadd r3, r4 => r5\nstoreAI r5 => [BP-16]\nloadAI [BP-16] => r6\nloadI 5 => r7\ncmp_GT r6, r7 => r8\ncbr r8 => l4, l5\nl4:\njump l3\njump l6\nl5:\nloadAI [BP-8] => r9\nloadI 1 => r10\nadd r9, r10 => r11\nstoreAI r11 => [BP-8]\nl6:\nsymbolTable: (empty)"];
13 -> 14;
13 -> 19;
11 [shape=box, label="WhileLoop\ncode: \nl1:\nloadI 1 => r2\ncbr r2 => l2, l3\nl2:\nloadAI [BP-16] => r3\nloadI 1 => r4\nadd r3, r4 => r5\nstoreAI r5 => [BP-16]\nloadAI [BP-16] => r6\nloadI 5 => r7\ncmp_GT r6, r7 => r8\ncbr r8 => l4, l5\nl4:\njump l3\njump l6\nl5:\nloadAI [BP-8] => r9\nloadI 1 => r10\nadd r9, r10 => r11\nstoreAI r11 => [BP-8]\nl6:\njump l1\nl3:"];
11 -> 12;
11 -> 13;
32 [shape=box, label="Location name='count'\nreg: r12\ncode: \nloadAI [BP-8] => r12\ntype: int"];
31 [shape=box, label="Return\ncode: \nloadAI [BP-8] => r12\ni2i r12 => RET\njump l0"];
31 -> 32;
2 [shape=box, label="Block\ncode: \nloadI 0 => r0\nstoreAI r0 => [BP-8]\nloadI 0 => r1\nstoreAI r1 => [BP-16]\nl1:\nloadI 1 => r2\ncbr r2 => l2, l3\nl2:\nloadAI [BP-16] => r3\nloadI 1 => r4\nadd r3, r4 => r5\nstoreAI r5 => [BP-16]\nloadAI [BP-16] => r6\nloadI 5 => r7\ncmp_GT r6, r7 => r8\ncbr r8 => l4, l5\nl4:\njump l3\njump l6\nl5:\nloadAI [BP-8] => r9\nloadI 1 => r10\nadd r9, r10 => r11\nstoreAI r11 => [BP-8]\nl6:\njump l1\nl3:\nloadAI [BP-8] => r12\ni2i r12 => RET\njump l0\nsymbolTable: \n  count : int {stack offset=-8}\n  i : int {stack offset=-16}"];
2 -> 3;
2 -> 4;
2 -> 5;
2 -> 8;
2 -> 11;
2 -> 31;
1 [shape=box, label="FuncDecl name='main'\ncode: \nmain:\npush BP\ni2i SP => BP\naddI SP, 0 => BP\nloadI 0 => r0\nstoreAI r0 => [BP-8]\nloadI 0 => r1\nstoreAI r1 => [BP-16]\nl1:\nloadI 1 => r2\ncbr r2 => l2, l3\nl2:\nloadAI [BP-16] => r3\nloadI 1 => r4\nadd r3, r4 => r5\nstoreAI r5 => [BP-16]\nloadAI [BP-16] => r6\nloadI 5 => r7\ncmp_GT r6, r7 => r8\ncbr r8 => l4, l5\nl4:\njump l3\njump l6\nl5:\nloadAI [BP-8] => r9\nloadI 1 => r10\nadd r9, r10 => r11\nstoreAI r11 => [BP-8]\nl6:\njump l1\nl3:\nloadAI [BP-8] => r12\ni2i r12 => RET\njump l0\nl0:\ni2i BP => SP\npop BP\nreturn\nlocalSize: 16\nsymbolTable: (empty)"];
1 -> 2;
0 [shape=box, label="Program\ncode: (...)\nstaticSize: 0\nsymbolTable: \n  print_int : (int) -> void\n  print_bool : (bool) -> void\n  print_str : (str) -> void\n  main : () -> int"];
0 -> 1;
}

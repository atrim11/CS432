digraph AST {
3 [shape=box, label="VarDecl name='result'"];
4 [shape=box, label="VarDecl name='temp'"];
6 [shape=box, label="Location name='temp'\nreg: r0\ncode: \nloadAI [BP-16] => r0\ntype: int"];
7 [shape=box, label="Literal value=1\nreg: r1\ncode: \nloadI 1 => r1\ntype: int"];
5 [shape=box, label="Assignment\ncode: \nloadI 1 => r1\nstoreAI r1 => [BP-16]"];
5 -> 6;
5 -> 7;
10 [shape=box, label="Location name='temp'\nreg: r2\ncode: \nloadAI [BP-16] => r2\ntype: int"];
11 [shape=box, label="Literal value=1\nreg: r3\ncode: \nloadI 1 => r3\ntype: int"];
9 [shape=box, label="BinaryOp op='>='\nreg: r4\ncode: \nloadAI [BP-16] => r2\nloadI 1 => r3\ncmp_GE r2, r3 => r4\ntype: bool"];
9 -> 10;
9 -> 11;
15 [shape=box, label="Location name='temp'\nreg: r5\ncode: \nloadAI [BP-16] => r5\ntype: int"];
16 [shape=box, label="Literal value=2\nreg: r6\ncode: \nloadI 2 => r6\ntype: int"];
14 [shape=box, label="BinaryOp op='=='\nreg: r7\ncode: \nloadAI [BP-16] => r5\nloadI 2 => r6\ncmp_EQ r5, r6 => r7\ntype: bool"];
14 -> 15;
14 -> 16;
19 [shape=box, label="Location name='result'\nreg: r8\ncode: \nloadAI [BP-8] => r8\ntype: int"];
20 [shape=box, label="Literal value=0\nreg: r9\ncode: \nloadI 0 => r9\ntype: int"];
18 [shape=box, label="Assignment\ncode: \nloadI 0 => r9\nstoreAI r9 => [BP-8]"];
18 -> 19;
18 -> 20;
17 [shape=box, label="Block\ncode: \nloadI 0 => r9\nstoreAI r9 => [BP-8]\nsymbolTable: (empty)"];
17 -> 18;
23 [shape=box, label="Location name='result'\nreg: r10\ncode: \nloadAI [BP-8] => r10\ntype: int"];
24 [shape=box, label="Literal value=1\nreg: r11\ncode: \nloadI 1 => r11\ntype: int"];
22 [shape=box, label="Assignment\ncode: \nloadI 1 => r11\nstoreAI r11 => [BP-8]"];
22 -> 23;
22 -> 24;
21 [shape=box, label="Block\ncode: \nloadI 1 => r11\nstoreAI r11 => [BP-8]\nsymbolTable: (empty)"];
21 -> 22;
13 [shape=box, label="Conditional\ncode: \nloadAI [BP-16] => r5\nloadI 2 => r6\ncmp_EQ r5, r6 => r7\ncbr r7 => l3, l4\nl3:\nloadI 0 => r9\nstoreAI r9 => [BP-8]\nl3:\nloadI 1 => r11\nstoreAI r11 => [BP-8]"];
13 -> 14;
13 -> 17;
13 -> 21;
12 [shape=box, label="Block\ncode: \nloadAI [BP-16] => r5\nloadI 2 => r6\ncmp_EQ r5, r6 => r7\ncbr r7 => l3, l4\nl3:\nloadI 0 => r9\nstoreAI r9 => [BP-8]\nl3:\nloadI 1 => r11\nstoreAI r11 => [BP-8]\nsymbolTable: (empty)"];
12 -> 13;
8 [shape=box, label="Conditional\ncode: \nloadAI [BP-16] => r2\nloadI 1 => r3\ncmp_GE r2, r3 => r4\ncbr r4 => l3, l4\nl3:\nloadAI [BP-16] => r5\nloadI 2 => r6\ncmp_EQ r5, r6 => r7\ncbr r7 => l3, l4\nl3:\nloadI 0 => r9\nstoreAI r9 => [BP-8]\nl3:\nloadI 1 => r11\nstoreAI r11 => [BP-8]\nl4:"];
8 -> 9;
8 -> 12;
26 [shape=box, label="Location name='result'\nreg: r12\ncode: \nloadAI [BP-8] => r12\ntype: int"];
25 [shape=box, label="Return\ncode: \nloadAI [BP-8] => r12\ni2i r12 => RET\njump l0"];
25 -> 26;
2 [shape=box, label="Block\ncode: \nloadI 1 => r1\nstoreAI r1 => [BP-16]\nloadAI [BP-16] => r2\nloadI 1 => r3\ncmp_GE r2, r3 => r4\ncbr r4 => l3, l4\nl3:\nloadAI [BP-16] => r5\nloadI 2 => r6\ncmp_EQ r5, r6 => r7\ncbr r7 => l3, l4\nl3:\nloadI 0 => r9\nstoreAI r9 => [BP-8]\nl3:\nloadI 1 => r11\nstoreAI r11 => [BP-8]\nl4:\nloadAI [BP-8] => r12\ni2i r12 => RET\njump l0\nsymbolTable: \n  result : int {stack offset=-8}\n  temp : int {stack offset=-16}"];
2 -> 3;
2 -> 4;
2 -> 5;
2 -> 8;
2 -> 25;
1 [shape=box, label="FuncDecl name='main'\ncode: \nmain:\npush BP\ni2i SP => BP\naddI SP, 0 => BP\nloadI 1 => r1\nstoreAI r1 => [BP-16]\nloadAI [BP-16] => r2\nloadI 1 => r3\ncmp_GE r2, r3 => r4\ncbr r4 => l3, l4\nl3:\nloadAI [BP-16] => r5\nloadI 2 => r6\ncmp_EQ r5, r6 => r7\ncbr r7 => l3, l4\nl3:\nloadI 0 => r9\nstoreAI r9 => [BP-8]\nl3:\nloadI 1 => r11\nstoreAI r11 => [BP-8]\nl4:\nloadAI [BP-8] => r12\ni2i r12 => RET\njump l0\nl0:\ni2i BP => SP\npop BP\nreturn\nlocalSize: 16\nsymbolTable: (empty)"];
1 -> 2;
0 [shape=box, label="Program\ncode: (...)\nstaticSize: 0\nsymbolTable: \n  print_int : (int) -> void\n  print_bool : (bool) -> void\n  print_str : (str) -> void\n  main : () -> int"];
0 -> 1;
}

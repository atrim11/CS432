digraph AST {
3 [shape=box, label="VarDecl name='result'"];
4 [shape=box, label="VarDecl name='temp'"];
6 [shape=box, label="Location name='temp'\ntype: int"];
7 [shape=box, label="Literal value=1\nreg: r0\ncode: \nloadI 1 => r0\ntype: int"];
5 [shape=box, label="Assignment\ncode: \nloadI 1 => r0\nstoreAI r0 => [BP-16]"];
5 -> 6;
5 -> 7;
10 [shape=box, label="Location name='temp'\nreg: r1\ncode: \nloadAI [BP-16] => r1\ntype: int"];
11 [shape=box, label="Literal value=1\nreg: r2\ncode: \nloadI 1 => r2\ntype: int"];
9 [shape=box, label="BinaryOp op='=='\nreg: r3\ncode: \nloadAI [BP-16] => r1\nloadI 1 => r2\ncmp_EQ r1, r2 => r3\ntype: bool"];
9 -> 10;
9 -> 11;
15 [shape=box, label="Location name='temp'\nreg: r4\ncode: \nloadAI [BP-16] => r4\ntype: int"];
16 [shape=box, label="Literal value=2\nreg: r5\ncode: \nloadI 2 => r5\ntype: int"];
14 [shape=box, label="BinaryOp op='=='\nreg: r6\ncode: \nloadAI [BP-16] => r4\nloadI 2 => r5\ncmp_EQ r4, r5 => r6\ntype: bool"];
14 -> 15;
14 -> 16;
19 [shape=box, label="Location name='result'\ntype: int"];
20 [shape=box, label="Literal value=0\nreg: r7\ncode: \nloadI 0 => r7\ntype: int"];
18 [shape=box, label="Assignment\ncode: \nloadI 0 => r7\nstoreAI r7 => [BP-8]"];
18 -> 19;
18 -> 20;
17 [shape=box, label="Block\ncode: \nloadI 0 => r7\nstoreAI r7 => [BP-8]\nsymbolTable: (empty)"];
17 -> 18;
23 [shape=box, label="Location name='result'\ntype: int"];
24 [shape=box, label="Literal value=42\nreg: r8\ncode: \nloadI 42 => r8\ntype: int"];
22 [shape=box, label="Assignment\ncode: \nloadI 42 => r8\nstoreAI r8 => [BP-8]"];
22 -> 23;
22 -> 24;
21 [shape=box, label="Block\ncode: \nloadI 42 => r8\nstoreAI r8 => [BP-8]\nsymbolTable: (empty)"];
21 -> 22;
13 [shape=box, label="Conditional\ncode: \nloadAI [BP-16] => r4\nloadI 2 => r5\ncmp_EQ r4, r5 => r6\ncbr r6 => l4, l5\nl4:\nloadI 0 => r7\nstoreAI r7 => [BP-8]\njump l7\nl5:\nloadI 42 => r8\nstoreAI r8 => [BP-8]\nl7:\nend_label: (...)\nbody_label: (...)"];
13 -> 14;
13 -> 17;
13 -> 21;
12 [shape=box, label="Block\ncode: \nloadAI [BP-16] => r4\nloadI 2 => r5\ncmp_EQ r4, r5 => r6\ncbr r6 => l4, l5\nl4:\nloadI 0 => r7\nstoreAI r7 => [BP-8]\njump l7\nl5:\nloadI 42 => r8\nstoreAI r8 => [BP-8]\nl7:\nsymbolTable: (empty)"];
12 -> 13;
27 [shape=box, label="Location name='result'\ntype: int"];
28 [shape=box, label="Literal value=99\nreg: r9\ncode: \nloadI 99 => r9\ntype: int"];
26 [shape=box, label="Assignment\ncode: \nloadI 99 => r9\nstoreAI r9 => [BP-8]"];
26 -> 27;
26 -> 28;
25 [shape=box, label="Block\ncode: \nloadI 99 => r9\nstoreAI r9 => [BP-8]\nsymbolTable: (empty)"];
25 -> 26;
8 [shape=box, label="Conditional\ncode: \nloadAI [BP-16] => r1\nloadI 1 => r2\ncmp_EQ r1, r2 => r3\ncbr r3 => l1, l2\nl1:\nloadAI [BP-16] => r4\nloadI 2 => r5\ncmp_EQ r4, r5 => r6\ncbr r6 => l4, l5\nl4:\nloadI 0 => r7\nstoreAI r7 => [BP-8]\njump l7\nl5:\nloadI 42 => r8\nstoreAI r8 => [BP-8]\nl7:\njump l8\nl2:\nloadI 99 => r9\nstoreAI r9 => [BP-8]\nl8:\nend_label: (...)\nbody_label: (...)"];
8 -> 9;
8 -> 12;
8 -> 25;
30 [shape=box, label="Location name='result'\nreg: r10\ncode: \nloadAI [BP-8] => r10\ntype: int"];
29 [shape=box, label="Return\ncode: \nloadAI [BP-8] => r10\ni2i r10 => RET\njump l0"];
29 -> 30;
2 [shape=box, label="Block\ncode: \nloadI 1 => r0\nstoreAI r0 => [BP-16]\nloadAI [BP-16] => r1\nloadI 1 => r2\ncmp_EQ r1, r2 => r3\ncbr r3 => l1, l2\nl1:\nloadAI [BP-16] => r4\nloadI 2 => r5\ncmp_EQ r4, r5 => r6\ncbr r6 => l4, l5\nl4:\nloadI 0 => r7\nstoreAI r7 => [BP-8]\njump l7\nl5:\nloadI 42 => r8\nstoreAI r8 => [BP-8]\nl7:\njump l8\nl2:\nloadI 99 => r9\nstoreAI r9 => [BP-8]\nl8:\nloadAI [BP-8] => r10\ni2i r10 => RET\njump l0\nsymbolTable: \n  result : int {stack offset=-8}\n  temp : int {stack offset=-16}"];
2 -> 3;
2 -> 4;
2 -> 5;
2 -> 8;
2 -> 29;
1 [shape=box, label="FuncDecl name='main'\ncode: \nmain:\npush BP\ni2i SP => BP\naddI SP, 0 => BP\nloadI 1 => r0\nstoreAI r0 => [BP-16]\nloadAI [BP-16] => r1\nloadI 1 => r2\ncmp_EQ r1, r2 => r3\ncbr r3 => l1, l2\nl1:\nloadAI [BP-16] => r4\nloadI 2 => r5\ncmp_EQ r4, r5 => r6\ncbr r6 => l4, l5\nl4:\nloadI 0 => r7\nstoreAI r7 => [BP-8]\njump l7\nl5:\nloadI 42 => r8\nstoreAI r8 => [BP-8]\nl7:\njump l8\nl2:\nloadI 99 => r9\nstoreAI r9 => [BP-8]\nl8:\nloadAI [BP-8] => r10\ni2i r10 => RET\njump l0\nl0:\ni2i BP => SP\npop BP\nreturn\nlocalSize: 16\nsymbolTable: (empty)"];
1 -> 2;
0 [shape=box, label="Program\ncode: (...)\nstaticSize: 0\nsymbolTable: \n  print_int : (int) -> void\n  print_bool : (bool) -> void\n  print_str : (str) -> void\n  main : () -> int"];
0 -> 1;
}

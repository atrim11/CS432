digraph AST {
1 [shape=box, label="VarDecl name='arr'\ncode: \nloadI 256 => r0\naddI SP, 80 => SP"];
6 [shape=box, label="Literal value=0\nreg: r1\ncode: \nloadI 0 => r1\ntype: int"];
5 [shape=box, label="Location name='arr'\ntype: int"];
5 -> 6;
7 [shape=box, label="Literal value=1\nreg: r2\ncode: \nloadI 1 => r2\ntype: int"];
4 [shape=box, label="Assignment\ncode: \nloadI 1 => r2\nloadI 256 => r3\nloadI 0 => r1\nmultI r1, 8 => r4\nstoreAO r2 => [r3+r4]"];
4 -> 5;
4 -> 7;
10 [shape=box, label="Literal value=1\nreg: r5\ncode: \nloadI 1 => r5\ntype: int"];
9 [shape=box, label="Location name='arr'\ntype: int"];
9 -> 10;
11 [shape=box, label="Literal value=2\nreg: r6\ncode: \nloadI 2 => r6\ntype: int"];
8 [shape=box, label="Assignment\ncode: \nloadI 2 => r6\nloadI 256 => r7\nloadI 1 => r5\nmultI r5, 8 => r8\nstoreAO r6 => [r7+r8]"];
8 -> 9;
8 -> 11;
14 [shape=box, label="Literal value=2\nreg: r9\ncode: \nloadI 2 => r9\ntype: int"];
13 [shape=box, label="Location name='arr'\ntype: int"];
13 -> 14;
15 [shape=box, label="Literal value=3\nreg: r10\ncode: \nloadI 3 => r10\ntype: int"];
12 [shape=box, label="Assignment\ncode: \nloadI 3 => r10\nloadI 256 => r11\nloadI 2 => r9\nmultI r9, 8 => r12\nstoreAO r10 => [r11+r12]"];
12 -> 13;
12 -> 15;
20 [shape=box, label="Literal value=0\nreg: r13\ncode: \nloadI 0 => r13\ntype: int"];
19 [shape=box, label="Location name='arr'\nreg: r15\ncode: \nloadI 256 => r14\nloadI 0 => r13\nmultI r13, 8 => r16\nloadAO [r14+r16] => r15\ntype: int"];
19 -> 20;
22 [shape=box, label="Literal value=1\nreg: r17\ncode: \nloadI 1 => r17\ntype: int"];
21 [shape=box, label="Location name='arr'\nreg: r19\ncode: \nloadI 256 => r18\nloadI 1 => r17\nmultI r17, 8 => r20\nloadAO [r18+r20] => r19\ntype: int"];
21 -> 22;
18 [shape=box, label="BinaryOp op='+'\nreg: r21\ncode: \nloadI 256 => r14\nloadI 0 => r13\nmultI r13, 8 => r16\nloadAO [r14+r16] => r15\nloadI 256 => r18\nloadI 1 => r17\nmultI r17, 8 => r20\nloadAO [r18+r20] => r19\nadd r15, r19 => r21\ntype: int"];
18 -> 19;
18 -> 21;
24 [shape=box, label="Literal value=2\nreg: r22\ncode: \nloadI 2 => r22\ntype: int"];
23 [shape=box, label="Location name='arr'\nreg: r24\ncode: \nloadI 256 => r23\nloadI 2 => r22\nmultI r22, 8 => r25\nloadAO [r23+r25] => r24\ntype: int"];
23 -> 24;
17 [shape=box, label="BinaryOp op='+'\nreg: r26\ncode: \nloadI 256 => r14\nloadI 0 => r13\nmultI r13, 8 => r16\nloadAO [r14+r16] => r15\nloadI 256 => r18\nloadI 1 => r17\nmultI r17, 8 => r20\nloadAO [r18+r20] => r19\nadd r15, r19 => r21\nloadI 256 => r23\nloadI 2 => r22\nmultI r22, 8 => r25\nloadAO [r23+r25] => r24\nadd r21, r24 => r26\ntype: int"];
17 -> 18;
17 -> 23;
16 [shape=box, label="Return\ncode: \nloadI 256 => r14\nloadI 0 => r13\nmultI r13, 8 => r16\nloadAO [r14+r16] => r15\nloadI 256 => r18\nloadI 1 => r17\nmultI r17, 8 => r20\nloadAO [r18+r20] => r19\nadd r15, r19 => r21\nloadI 256 => r23\nloadI 2 => r22\nmultI r22, 8 => r25\nloadAO [r23+r25] => r24\nadd r21, r24 => r26\ni2i r26 => RET\njump l0"];
16 -> 17;
3 [shape=box, label="Block\ncode: \nloadI 1 => r2\nloadI 256 => r3\nloadI 0 => r1\nmultI r1, 8 => r4\nstoreAO r2 => [r3+r4]\nloadI 2 => r6\nloadI 256 => r7\nloadI 1 => r5\nmultI r5, 8 => r8\nstoreAO r6 => [r7+r8]\nloadI 3 => r10\nloadI 256 => r11\nloadI 2 => r9\nmultI r9, 8 => r12\nstoreAO r10 => [r11+r12]\nloadI 256 => r14\nloadI 0 => r13\nmultI r13, 8 => r16\nloadAO [r14+r16] => r15\nloadI 256 => r18\nloadI 1 => r17\nmultI r17, 8 => r20\nloadAO [r18+r20] => r19\nadd r15, r19 => r21\nloadI 256 => r23\nloadI 2 => r22\nmultI r22, 8 => r25\nloadAO [r23+r25] => r24\nadd r21, r24 => r26\ni2i r26 => RET\njump l0\nsymbolTable: (empty)"];
3 -> 4;
3 -> 8;
3 -> 12;
3 -> 16;
2 [shape=box, label="FuncDecl name='main'\ncode: \nmain:\npush BP\ni2i SP => BP\naddI SP, 8 => SP\nloadI 1 => r2\nloadI 256 => r3\nloadI 0 => r1\nmultI r1, 8 => r4\nstoreAO r2 => [r3+r4]\nloadI 2 => r6\nloadI 256 => r7\nloadI 1 => r5\nmultI r5, 8 => r8\nstoreAO r6 => [r7+r8]\nloadI 3 => r10\nloadI 256 => r11\nloadI 2 => r9\nmultI r9, 8 => r12\nstoreAO r10 => [r11+r12]\nloadI 256 => r14\nloadI 0 => r13\nmultI r13, 8 => r16\nloadAO [r14+r16] => r15\nloadI 256 => r18\nloadI 1 => r17\nmultI r17, 8 => r20\nloadAO [r18+r20] => r19\nadd r15, r19 => r21\nloadI 256 => r23\nloadI 2 => r22\nmultI r22, 8 => r25\nloadAO [r23+r25] => r24\nadd r21, r24 => r26\ni2i r26 => RET\njump l0\nl0:\ni2i BP => SP\npop BP\nreturn\nlocalSize: 0\nsymbolTable: (empty)"];
2 -> 3;
0 [shape=box, label="Program\ncode: (...)\nstaticSize: 80\nsymbolTable: \n  print_int : (int) -> void\n  print_bool : (bool) -> void\n  print_str : (str) -> void\n  main : () -> int\n  arr : int [10] {static offset=256}"];
0 -> 1;
0 -> 2;
}

digraph AST {
5 [shape=box, label="Location name='x'\nreg: r0\ncode: \nloadAI [BP+16] => r0\ntype: int"];
6 [shape=box, label="Location name='y'\nreg: r1\ncode: \nloadAI [BP+24] => r1\ntype: int"];
4 [shape=box, label="BinaryOp op='-'\nreg: r2\ncode: \nloadAI [BP+16] => r0\nloadAI [BP+24] => r1\nsub r0, r1 => r2\ntype: int"];
4 -> 5;
4 -> 6;
3 [shape=box, label="Return\ncode: \nloadAI [BP+16] => r0\nloadAI [BP+24] => r1\nsub r0, r1 => r2\ni2i r2 => RET\njump l0"];
3 -> 4;
2 [shape=box, label="Block\ncode: \nloadAI [BP+16] => r0\nloadAI [BP+24] => r1\nsub r0, r1 => r2\ni2i r2 => RET\njump l0\nsymbolTable: (empty)"];
2 -> 3;
1 [shape=box, label="FuncDecl name='add'\ncode: \nadd:\npush BP\ni2i SP => BP\naddI SP, 0 => SP\nloadAI [BP+16] => r0\nloadAI [BP+24] => r1\nsub r0, r1 => r2\ni2i r2 => RET\njump l0\nl0:\ni2i BP => SP\npop BP\nreturn\nlocalSize: 0\nsymbolTable: \n  x : int {stack offset=16}\n  y : int {stack offset=24}"];
1 -> 2;
9 [shape=box, label="VarDecl name='a'"];
10 [shape=box, label="VarDecl name='b'"];
12 [shape=box, label="Location name='a'\ntype: int"];
13 [shape=box, label="Literal value=10\nreg: r3\ncode: \nloadI 10 => r3\ntype: int"];
11 [shape=box, label="Assignment\ncode: \nloadI 10 => r3\nstoreAI r3 => [BP-8]"];
11 -> 12;
11 -> 13;
15 [shape=box, label="Location name='b'\ntype: int"];
16 [shape=box, label="Literal value=5\nreg: r4\ncode: \nloadI 5 => r4\ntype: int"];
14 [shape=box, label="Assignment\ncode: \nloadI 5 => r4\nstoreAI r4 => [BP-16]"];
14 -> 15;
14 -> 16;
19 [shape=box, label="Location name='a'\nreg: r5\ncode: \nloadAI [BP-8] => r5\ntype: int"];
20 [shape=box, label="Location name='b'\nreg: r6\ncode: \nloadAI [BP-16] => r6\ntype: int"];
18 [shape=box, label="FuncCall name='add'\nreg: r7\ncode: \nloadAI [BP-8] => r5\nloadAI [BP-16] => r6\npush r6\npush r5\ncall add\naddI SP, 16 => SP\ni2i RET => r7\ntype: int"];
18 -> 19;
18 -> 20;
17 [shape=box, label="Return\ncode: \nloadAI [BP-8] => r5\nloadAI [BP-16] => r6\npush r6\npush r5\ncall add\naddI SP, 16 => SP\ni2i RET => r7\ni2i r7 => RET\njump l1"];
17 -> 18;
8 [shape=box, label="Block\ncode: \nloadI 10 => r3\nstoreAI r3 => [BP-8]\nloadI 5 => r4\nstoreAI r4 => [BP-16]\nloadAI [BP-8] => r5\nloadAI [BP-16] => r6\npush r6\npush r5\ncall add\naddI SP, 16 => SP\ni2i RET => r7\ni2i r7 => RET\njump l1\nsymbolTable: \n  a : int {stack offset=-8}\n  b : int {stack offset=-16}"];
8 -> 9;
8 -> 10;
8 -> 11;
8 -> 14;
8 -> 17;
7 [shape=box, label="FuncDecl name='main'\ncode: \nmain:\npush BP\ni2i SP => BP\naddI SP, -16 => SP\nloadI 10 => r3\nstoreAI r3 => [BP-8]\nloadI 5 => r4\nstoreAI r4 => [BP-16]\nloadAI [BP-8] => r5\nloadAI [BP-16] => r6\npush r6\npush r5\ncall add\naddI SP, 16 => SP\ni2i RET => r7\ni2i r7 => RET\njump l1\nl1:\ni2i BP => SP\npop BP\nreturn\nlocalSize: 16\nsymbolTable: (empty)"];
7 -> 8;
0 [shape=box, label="Program\ncode: (...)\nstaticSize: 0\nsymbolTable: \n  print_int : (int) -> void\n  print_bool : (bool) -> void\n  print_str : (str) -> void\n  add : (int, int) -> int\n  main : () -> int"];
0 -> 1;
0 -> 7;
}

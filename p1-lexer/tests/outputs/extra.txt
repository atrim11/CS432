KEYWORD  [line 001]  def
ID       [line 001]  main
SYMBOL   [line 001]  (
SYMBOL   [line 001]  )
SYMBOL   [line 001]  {
KEYWORD  [line 001]  return
DECLIT   [line 001]  1
SYMBOL   [line 001]  ;
SYMBOL   [line 001]  }
KEYWORD  [line 004]  int
ID       [line 004]  x
SYMBOL   [line 004]  =
DECLIT   [line 004]  42
SYMBOL   [line 004]  +
DECLIT   [line 004]  5
SYMBOL   [line 004]  ;
KEYWORD  [line 007]  def
ID       [line 007]  foo
SYMBOL   [line 007]  (
SYMBOL   [line 007]  )
SYMBOL   [line 007]  {
KEYWORD  [line 008]  while
SYMBOL   [line 008]  (
DECLIT   [line 008]  1
SYMBOL   [line 008]  )
SYMBOL   [line 008]  {
KEYWORD  [line 009]  return
DECLIT   [line 009]  1
SYMBOL   [line 009]  ;
SYMBOL   [line 010]  }
KEYWORD  [line 011]  return
DECLIT   [line 011]  1
SYMBOL   [line 011]  ;
SYMBOL   [line 012]  }
KEYWORD  [line 014]  def
ID       [line 014]  bar
SYMBOL   [line 014]  (
SYMBOL   [line 014]  )
SYMBOL   [line 014]  {
KEYWORD  [line 015]  if
SYMBOL   [line 015]  (
DECLIT   [line 015]  1
SYMBOL   [line 015]  )
SYMBOL   [line 015]  {
KEYWORD  [line 016]  return
DECLIT   [line 016]  1
SYMBOL   [line 016]  ;
SYMBOL   [line 017]  }
KEYWORD  [line 018]  return
DECLIT   [line 018]  1
SYMBOL   [line 018]  ;
SYMBOL   [line 019]  }

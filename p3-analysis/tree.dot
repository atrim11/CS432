digraph AST {
5 [shape=box, label="Literal value=1\ntype: int"];
6 [shape=box, label="Literal value=1\ntype: int"];
7 [shape=box, label="Literal value=1\ntype: int"];
4 [shape=box, label="FuncCall name='foo'\ntype: int"];
4 -> 5;
4 -> 6;
4 -> 7;
3 [shape=box, label="Return"];
3 -> 4;
2 [shape=box, label="Block\nsymbolTable: (empty)"];
2 -> 3;
1 [shape=box, label="FuncDecl name='foo'\nsymbolTable: \n  foo : int\n  a : int\n  b : int"];
1 -> 2;
11 [shape=box, label="Literal value=0\ntype: int"];
10 [shape=box, label="Return"];
10 -> 11;
9 [shape=box, label="Block\nsymbolTable: (empty)"];
9 -> 10;
8 [shape=box, label="FuncDecl name='bar'\nsymbolTable: \n  a : int\n  a : int\n  b : int"];
8 -> 9;
15 [shape=box, label="Literal value=0\ntype: int"];
14 [shape=box, label="Return"];
14 -> 15;
13 [shape=box, label="Block\nsymbolTable: (empty)"];
13 -> 14;
12 [shape=box, label="FuncDecl name='main'\nsymbolTable: (empty)"];
12 -> 13;
0 [shape=box, label="Program\nsymbolTable: \n  print_int : (int) -> void\n  print_bool : (bool) -> void\n  print_str : (str) -> void\n  foo : (int, int, int) -> int\n  bar : (int, int, int) -> int\n  main : () -> int"];
0 -> 1;
0 -> 8;
0 -> 12;
}

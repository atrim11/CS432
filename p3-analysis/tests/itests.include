
# list of integration tests
#  format: run_test <TAG> <ARGS>
#    <TAG>      used as the root for all filenames (i.e., "expected/$TAG.txt")
#    <ARGS>     command-line arguments to test

run_test    D_undefined_var             "inputs/undefined_var.decaf"
run_test    B_add                       "inputs/add.decaf"
run_test    dup_func_name               "inputs/dup_func_name.decaf"
run_test    mult_funcs                  "inputs/mult_funcs.decaf"
run_test    array_dec_in_block          "inputs/array_dec_in_block.decaf"
run_test    alot_of_funcs               "inputs/alot_of_funcs.decaf"
run_test    predefined_func             "inputs/predefined_func.decaf"
run_test    duplicate_parameter         "inputs/duplicate_parameter.decaf"
run_test    dup_parameters_mult         "inputs/dup_parameters_mult.decaf"
run_test    add2                        "inputs/add2.decaf"
run_test    add3                        "inputs/add3.decaf"
run_test    add_bad                     "inputs/add_bad.decaf"
run_test    parameter_pass_bad          "inputs/parameter_pass_bad.decaf"
run_test    void_in                     "inputs/void_in.decaf"
run_test    void_out                    "inputs/void_out.decaf"
run_test    good                        "inputs/good.decaf"
run_test    given_test                  "inputs/given_test.decaf"
run_test    array_correct               "inputs/array_correct.decaf"
run_test    array_access_noindex        "inputs/array_access_noindex.decaf"
run_test    array_notarray_index        "inputs/array_notarray_index.decaf"
run_test    array_index_bad_type        "inputs/array_index_bad_type.decaf"
run_test    array_size_zero             "inputs/array_size_zero.decaf"
run_test    array_index_func            "inputs/array_index_func.decaf"
run_test    loops_valid                 "inputs/loops_valid.decaf"
run_test    loops_valid_double          "inputs/loops_valid_double.decaf"
run_test    loops_invalid               "inputs/loops_invalid.decaf"
run_test    loops_invalid_if            "inputs/loops_invalid_if.decaf"
run_test    loops_invalid_func          "inputs/loops_invalid_func.decaf"
run_test    loops_invalid_cont          "inputs/loops_invalid_cont.decaf"
run_test    loops_invalid_cont_func     "inputs/loops_invalid_cont_func.decaf"
run_test    return_valid                "inputs/return_valid.decaf"
run_test    return_invalid              "inputs/return_invalid.decaf"
run_test    p0                          "inputs/p0.decaf"
run_test    main_integer                "inputs/main_integer.decaf"
run_test    main_noparameters           "inputs/main_noparameters.decaf"
run_test    main_parameters             "inputs/main_parameters.decaf"
run_test    no_main                     "inputs/no_main.decaf"
run_test    main_void                   "inputs/main_void.decaf"
run_test    dup_symbols_same_scope      "inputs/duplicate_symbols.decaf"
run_test    dup_symbols_global_scope    "inputs/duplicate_symbols_global.decaf"
run_test    operation_invalid_not       "inputs/operation_invalid_not.decaf"
run_test    operation_invalid_not2      "inputs/operation_invalid_not2.decaf"
run_test    operation_valid_not         "inputs/operation_valid_not.decaf"
run_test    operation_nested_invalid    "inputs/operation_nested_invalid.decaf"
run_test    operation_invalid1          "inputs/operation_invalid1.decaf"
run_test    operation_invalid2          "inputs/operation_invalid2.decaf"
run_test    operation_invalid3          "inputs/operation_invalid3.decaf"
run_test    operation_valid1            "inputs/operation_valid1.decaf"
run_test    funcCall_void_invalid       "inputs/funcCall_void_invalid.decaf"
run_test    funcCall_invalid            "inputs/funcCall_invalid.decaf"
run_test    assignment_loop_invalid     "inputs/assignment_loop_invalid.decaf"
run_test    recursive                   "inputs/recursive.decaf"
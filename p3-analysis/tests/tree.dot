digraph AST {
4 [shape=box, label="Location name='result'\ntype: ???"];
10 [shape=box, label="Literal value=5\ntype: int"];
11 [shape=box, label="Literal value=3\ntype: int"];
9 [shape=box, label="BinaryOp op='*'"];
9 -> 10;
9 -> 11;
13 [shape=box, label="Literal value=12\ntype: int"];
15 [shape=box, label="Literal value=4\ntype: int"];
16 [shape=box, label="Literal value=2\ntype: int"];
14 [shape=box, label="BinaryOp op='-'"];
14 -> 15;
14 -> 16;
12 [shape=box, label="BinaryOp op='/'"];
12 -> 13;
12 -> 14;
8 [shape=box, label="BinaryOp op='+'"];
8 -> 9;
8 -> 12;
18 [shape=box, label="Literal value=10\ntype: int"];
19 [shape=box, label="Literal value=2\ntype: int"];
17 [shape=box, label="BinaryOp op='>='"];
17 -> 18;
17 -> 19;
7 [shape=box, label="BinaryOp op='&&'"];
7 -> 8;
7 -> 17;
23 [shape=box, label="Literal value=7\ntype: int"];
25 [shape=box, label="Literal value=9\ntype: int"];
26 [shape=box, label="Literal value=2\ntype: int"];
24 [shape=box, label="BinaryOp op='*'"];
24 -> 25;
24 -> 26;
22 [shape=box, label="BinaryOp op='+'"];
22 -> 23;
22 -> 24;
27 [shape=box, label="Literal value=30\ntype: int"];
21 [shape=box, label="BinaryOp op='<='"];
21 -> 22;
21 -> 27;
31 [shape=box, label="Literal value=15\ntype: int"];
32 [shape=box, label="Literal value=4\ntype: int"];
30 [shape=box, label="BinaryOp op='%'"];
30 -> 31;
30 -> 32;
33 [shape=box, label="Literal value=3\ntype: int"];
29 [shape=box, label="BinaryOp op='=='"];
29 -> 30;
29 -> 33;
28 [shape=box, label="UnaryOp op='!'"];
28 -> 29;
20 [shape=box, label="BinaryOp op='&&'"];
20 -> 21;
20 -> 28;
6 [shape=box, label="BinaryOp op='||'"];
6 -> 7;
6 -> 20;
39 [shape=box, label="Literal value=8\ntype: int"];
40 [shape=box, label="Literal value=2\ntype: int"];
38 [shape=box, label="BinaryOp op='/'"];
38 -> 39;
38 -> 40;
41 [shape=box, label="Literal value=1\ntype: int"];
37 [shape=box, label="BinaryOp op='-'"];
37 -> 38;
37 -> 41;
43 [shape=box, label="Literal value=6\ntype: int"];
45 [shape=box, label="Literal value=3\ntype: int"];
46 [shape=box, label="Literal value=2\ntype: int"];
44 [shape=box, label="BinaryOp op='+'"];
44 -> 45;
44 -> 46;
42 [shape=box, label="BinaryOp op='*'"];
42 -> 43;
42 -> 44;
36 [shape=box, label="BinaryOp op='+'"];
36 -> 37;
36 -> 42;
48 [shape=box, label="Literal value=25\ntype: int"];
49 [shape=box, label="Literal value=6\ntype: int"];
47 [shape=box, label="BinaryOp op='%'"];
47 -> 48;
47 -> 49;
35 [shape=box, label="BinaryOp op='=='"];
35 -> 36;
35 -> 47;
56 [shape=box, label="Literal value=14\ntype: int"];
57 [shape=box, label="Literal value=7\ntype: int"];
55 [shape=box, label="BinaryOp op='<='"];
55 -> 56;
55 -> 57;
59 [shape=box, label="Literal value=6\ntype: int"];
60 [shape=box, label="Literal value=3\ntype: int"];
58 [shape=box, label="BinaryOp op='>'"];
58 -> 59;
58 -> 60;
54 [shape=box, label="BinaryOp op='||'"];
54 -> 55;
54 -> 58;
63 [shape=box, label="Literal value=5\ntype: int"];
64 [shape=box, label="Literal value=2\ntype: int"];
62 [shape=box, label="BinaryOp op='*'"];
62 -> 63;
62 -> 64;
65 [shape=box, label="Literal value=10\ntype: int"];
61 [shape=box, label="BinaryOp op='/'"];
61 -> 62;
61 -> 65;
53 [shape=box, label="BinaryOp op='+'"];
53 -> 54;
53 -> 61;
69 [shape=box, label="Literal value=12\ntype: int"];
70 [shape=box, label="Literal value=3\ntype: int"];
68 [shape=box, label="BinaryOp op='=='"];
68 -> 69;
68 -> 70;
72 [shape=box, label="Literal value=4\ntype: int"];
73 [shape=box, label="Literal value=2\ntype: int"];
71 [shape=box, label="BinaryOp op='!='"];
71 -> 72;
71 -> 73;
67 [shape=box, label="BinaryOp op='*'"];
67 -> 68;
67 -> 71;
74 [shape=box, label="Literal value=2\ntype: int"];
66 [shape=box, label="BinaryOp op='/'"];
66 -> 67;
66 -> 74;
52 [shape=box, label="BinaryOp op='-'"];
52 -> 53;
52 -> 66;
77 [shape=box, label="Literal value=7\ntype: int"];
78 [shape=box, label="Literal value=3\ntype: int"];
76 [shape=box, label="BinaryOp op='%'"];
76 -> 77;
76 -> 78;
79 [shape=box, label="Literal value=5\ntype: int"];
75 [shape=box, label="BinaryOp op='*'"];
75 -> 76;
75 -> 79;
51 [shape=box, label="BinaryOp op='+'"];
51 -> 52;
51 -> 75;
80 [shape=box, label="Literal value=9\ntype: int"];
50 [shape=box, label="BinaryOp op='+'"];
50 -> 51;
50 -> 80;
34 [shape=box, label="BinaryOp op='&&'"];
34 -> 35;
34 -> 50;
5 [shape=box, label="BinaryOp op='||'"];
5 -> 6;
5 -> 34;
3 [shape=box, label="Assignment"];
3 -> 4;
3 -> 5;
82 [shape=box, label="Location name='result'\ntype: ???"];
81 [shape=box, label="Return"];
81 -> 82;
2 [shape=box, label="Block\nsymbolTable: (empty)"];
2 -> 3;
2 -> 81;
1 [shape=box, label="FuncDecl name='main'\nsymbolTable: (empty)"];
1 -> 2;
0 [shape=box, label="Program\nsymbolTable: \n  print_int : (int) -> void\n  print_bool : (bool) -> void\n  print_str : (str) -> void\n  main : () -> int"];
0 -> 1;
}

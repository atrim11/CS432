Program [line 1]
SYM TABLE:
 print_int : (int) -> void
 print_bool : (bool) -> void
 print_str : (str) -> void
 add : (int, int) -> int
 subtract : (int, int) -> int
 printResult : (int) -> void
 factorial : (int) -> int
 fibonacci : (int) -> int
 isEven : (int) -> bool
 isGreater : (int, int) -> bool
 complexNestedExample : (int) -> void
 main : () -> int
 globalVar1 : int
 globalVar2 : int
 myArray : int [10]

  FuncDecl name="add" return_type=int parameters={x:int,y:int} [line 7]
  SYM TABLE:
   x : int
   y : int

    Block [line 7]
    SYM TABLE:

  FuncDecl name="subtract" return_type=int parameters={x:int,y:int} [line 11]
  SYM TABLE:
   x : int
   y : int

    Block [line 11]
    SYM TABLE:

  FuncDecl name="printResult" return_type=void parameters={result:int} [line 15]
  SYM TABLE:
   result : int

    Block [line 15]
    SYM TABLE:

        Block [line 16]
        SYM TABLE:

        Block [line 18]
        SYM TABLE:

  FuncDecl name="factorial" return_type=int parameters={n:int} [line 23]
  SYM TABLE:
   n : int

    Block [line 23]
    SYM TABLE:

        Block [line 24]
        SYM TABLE:

        Block [line 26]
        SYM TABLE:

  FuncDecl name="fibonacci" return_type=int parameters={n:int} [line 31]
  SYM TABLE:
   n : int

    Block [line 31]
    SYM TABLE:

        Block [line 32]
        SYM TABLE:

        Block [line 34]
        SYM TABLE:

  FuncDecl name="isEven" return_type=bool parameters={num:int} [line 39]
  SYM TABLE:
   num : int

    Block [line 39]
    SYM TABLE:

  FuncDecl name="isGreater" return_type=bool parameters={a:int,b:int} [line 43]
  SYM TABLE:
   a : int
   b : int

    Block [line 43]
    SYM TABLE:

  FuncDecl name="complexNestedExample" return_type=void parameters={x:int} [line 47]
  SYM TABLE:
   x : int

    Block [line 47]
    SYM TABLE:
     i : int

        Block [line 50]
        SYM TABLE:

            Block [line 51]
            SYM TABLE:

                Block [line 53]
                SYM TABLE:

        Block [line 58]
        SYM TABLE:

  FuncDecl name="main" return_type=int parameters={} [line 64]
  SYM TABLE:

    Block [line 64]
    SYM TABLE:
     a : int
     b : int
     c : int
     i : int
     fact : int
     fib : int
     innerVar : int
     x : int

        Block [line 83]
        SYM TABLE:

        Block [line 98]
        SYM TABLE:

        Block [line 100]
        SYM TABLE:

        Block [line 107]
        SYM TABLE:

            Block [line 108]
            SYM TABLE:

            Block [line 111]
            SYM TABLE:

        Block [line 119]
        SYM TABLE:

        Block [line 122]
        SYM TABLE:

        Block [line 129]
        SYM TABLE:

            Block [line 131]
            SYM TABLE:

            Block [line 134]
            SYM TABLE:

